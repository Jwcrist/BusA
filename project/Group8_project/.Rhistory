dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
cleanDat
dat
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
cleanDat1
library(stringr)
myurl<-'http://en.Wikipedia.org/wiki/List_of_languages_by_number_of_native_speakers'
myTables<-readHTMLTable(myurl,trim=TRUE,encoding = "UTF-8")
library(XML)
library(stringr)
myurl<-'http://en.Wikipedia.org/wiki/List_of_languages_by_number_of_native_speakers'
myTables<-readHTMLTable(myurl,trim=TRUE,encoding = "UTF-8")
head(myTables,1)
mode(myTables)
datRaw<-data.frame(myTables[[1]])
datRaw
class(datRaw)
dat<-cbind(datRaw[2],datRaw[3])
head(dat)
library(stringr)
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
cleanDat1<-
cleanDat1
install.packages("RMySQL")
library(XML)
library(stringr)
myurl<-'http://en.Wikipedia.org/wiki/List_of_languages_by_number_of_native_speakers'
myTables<-readHTMLTable(myurl,trim=TRUE,encoding = "UTF-8")
head(myTables,1)
mode(myTables)
datRaw<-data.frame(myTables[[1]])
datRaw
class(datRaw)
dat<-cbind(datRaw[2],datRaw[3])
head(dat)
library(stringr)
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
cleanDat1
gsub("[^\\w]+",'',cleanDat1)
gsub("[^\\W]+",'',cleanDat1)
gsub("\\W+",'',cleanDat1)
gsub("^\\w+",'',cleanDat1)
gsub("^\\W+",'',cleanDat1)
gsub("\\W+",'',cleanDat1)
gsub("[^A-Za-z]+",'',cleanDat1)
myurl<-'http://en.Wikipedia.org/wiki/List_of_languages_by_number_of_native_speakers'
myTables<-readHTMLTable(myurl,trim=TRUE)
head(myTables,1)
datRaw<-data.frame(myTables[[1]])
dat<-cbind(datRaw[2],datRaw[3])
head(dat)
library(stringr)
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
cleanDat1
gsub("[^A-Za-z]+",'',cleanDat1)
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
gsub("[^A-Za-z]+",'',cleanDat1)
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat)
gsub("[^A-Za-z]+",'',cleanDat1)
cleanDat1
cleanDat1<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
gsub("[^A-Za-z]+",'',cleanDat1)
cleanDat2<-gsub('[^0-9]+','',dat[2])
cleanDat2
cleanDat2<-gsub('[^0-9]+',',',dat[2])
cleanDat2
head(dat)
dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
gsub("[^A-Za-z]+",'',cleanDat1)
dat
dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
gsub("[^A-Za-z]+",'',cleanDat1)
dat[,1]<-gsub("[^A-Za-z]+",'',dat[,1])
dat
dat[,2]<-gsub("[^0-9]+",'',dat[,2])
dat
dat[,2]<-gsub("[0-9]+",'',dat[,2])
dat
dat[,2]<-gsub("\[0-9\]+",'',dat[,2])
dat
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("\[0-9\]+",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat
dat[,2]<-gsub("[0-9]",'',dat[,2])
dat
dat[,2]<-gsub("\[[0-9]\]",'',dat[,2])
dat[,2]<-gsub("[\[0-9]\]",'',dat[,2])
dat[,2]<-gsub("[\\[0-9]\\]",'',dat[,2])
dat
dat[,2]<-gsub("[\[\0-9\]\]",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[\[\0-9\]\]",'',dat[,2])
dat[,2]<-gsub("\[0-9]",'',dat[,2])
dat[,2]<-gsub("[\[0-9]]",'',dat[,2])
library(stringr)
dat[,2]<-gsub("[\[0-9]]",'',dat[,2])
dat[,2]<-gsub("[\[0]]",'',dat[,2])
dat[,2]<-gsub("\[[0-9]]",'',dat[,2])
dat[,2]<-gsub("\[^[0-9]]",'',dat[,2])
dat[,2]<-gsub("[^[0-9]]",'',dat[,2])
dat
dat[,2]<-gsub("^[\\[0-9\\]+]",'',dat[,2])
cleanDat1
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("^[\[0-9\]+]",'',dat[,2])
dat[,2]<-gsub("^[[0-9]+]",'',dat[,2])
cleanDat1
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]+",'',dat[,2])
dat
dat[,2]<-gsub("[^0-9]{3}",'',dat[,2])
cleanDat1
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]{3}",'',dat[,2])
cleanDat1
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[0-9]{3}",'',dat[,2])
dat
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("^[0-9]{3}",'',dat[,2])
dat
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]{3}",'',dat[,2])
dat
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9{3}]",'',dat[,2])
head(dat)
dat[,2]<-gsub("[^0-9]{3}",'',dat[,2])
head(dat)
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]{3}",'',dat[,2])
head(dat)
dat[,2]<-gsub("[^0-9]",'',dat[,2])
head(dat)
dat[,2]<-gsub("[^0-9]{3}+",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]{3}+",'',dat[,2])
dat[,2]<-gsub("[0-9]{1}",'',dat[,2])
head(dat)
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]{1}",'',dat[,2])
head(dat)
tail(dat)
dat[,2]<-gsub("[^0-9]\[1]\[2]\[3]\[4]\[5]\[6]\[7]\[8]\[9]",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]\\[[1-9]\\]",'',dat[,2])
dat[,2]
dat[,2]<-gsub('\\[[1-9]\\]','',dat[,2])
dat[,2]
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]",'',dat[,2])
dat[,2]<-gsub('\\[[1-9]\\]','',dat[,2])
dat[,2]
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]",'',dat[,2])
dat[,2]<-gsub('\\[[1|2|3|4|5|6|7|8|9|0]\\]','',dat[,2])
dat[,2]
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]^.",'',dat[,2])
dat[,2]
dat[,2]<-gsub('\\[[1|2|3|4|5|6|7|8|9|0]\\]^.','',dat[,2])
dat[,2]
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[^0-9]&^.",'',dat[,2])
dat[,2]
dat[,2]<-gsub("[[^0-9]&^.]",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[[^0-9]&^.]",'',dat[,2])
dat[,2]
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[[^0-9]]",'',dat[,2])
dat[,2]
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[[^0-9]]",'',dat[,2])
dat[,2]
dat[,2]<-gsub('\\*','',dat[,2])
dat[,2]
dat[,2]<-gsub('\\[','',dat[,2])
head(dat)
tail(dat)
library(stringr)
dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
dat[,1]<-gsub("[^A-Za-z]+",'',dat[,1])
dat[,2]<-gsub("[^0-9]",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[[^0-9]]",'',dat[,2])
dat[,2]<-gsub('\\*','',dat[,2])
dat[,2]<-gsub('\\[','',dat[,2])
cleanDat<-dat
cleanDat
head(cleanDat,20)
dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
dat[,1]<-gsub("[^A-Za-z]+",'',dat[,1])
cleanDat<-dat
head(cleanDat,20)
library(XML)
library(stringr)
myurl<-'http://en.Wikipedia.org/wiki/List_of_languages_by_number_of_native_speakers'
myTables<-readHTMLTable(myurl,trim=TRUE)
head(myTables,1)
datRaw<-data.frame(tables[[1]])
tables<-readHTMLTable(myurl,trim=TRUE)
datRaw<-data.frame(tables[[1]])
datRaw
dat<-cbind(datRaw[2],datRaw[3])
head(dat)
library(stringr)
dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
dat[,1]<-gsub("[^A-Za-z]+",'',dat[,1])
dat[,2]<-gsub("[^0-9]",'',dat[,2])
dat<-cbind(datRaw[2],datRaw[3])
dat[,2]<-gsub("[[^0-9]]",'',dat[,2])
dat[,1]<-gsub('n*\\*<[A-Z]*[0-9]>', '' ,dat[,1])
dat[,1]<-gsub("[^A-Za-z]+",'',dat[,1])
dat[,2]<-gsub("[^0-9]",'',dat[,2])
dat[,2]<-gsub("[[^0-9]]",'',dat[,2])
dat[,2]<-gsub('\\*','',dat[,2])
dat[,2]<-gsub('\\[','',dat[,2])
cleanDat<-dat
head(cleanDat,20)
head(cleanDat,2)
head(cleanDat)
colname(dat[,2])<-"Millions_of_Speakers"
colnames(dat[,2])<-"Millions_of_Speakers"
colnames(dat)<-c("Language","Millions_of_Speakers")
cleanDat<-dat
head(cleanDat)
colnames(dat)<-c("Language","Mil_of_NativeSpeakers")
cleanDat<-dat
head(cleanDat)
colnames(dat)<-c("Language","Millions_Speakers")
cleanDat<-dat
head(cleanDat)
colnames(dat)<-c("Language","Native_Speakers")
cleanDat<-dat
head(cleanDat)
CleanDat<-head(cleanDat,20)
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar()
library(ggplot2)
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar()
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar(stat="identity")
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar(stat="identity")+axis_flip()
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-desc(CleanDat)
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-CleanDat[with{CleanDat,order(-Native_Speakers)),]
CleanDat<-CleanDat[with(CleanDat,order(-Native_Speakers)),]
CleanDat<-CleanDat[with(CleanDat,order(-Native_Speakers,Language)),]
CleanDat[order(-CleanDat[,2])]
CleanDat[order(-as.numberic(CleanDat[,2]))]
CleanDat[order(-as.numeric(CleanDat[,2]))]
CleanDat<-head(cleanDat,20)
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speakers),
decreasing=TRUE))))
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=sort(table(Native_Speakers),
decreasing=TRUE)))
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speaker),
decreasing=TRUE))))
decreasing=FALSE))))
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speaker),
decreasing=FALSE))))
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speakers),
decreasing=FALSE))))
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speakers),
decreasing=TRUE))))
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-head(cleanDat,20)
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speakers),
decreasing=TRUE))))
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat <- within(CleanDat,
Language <- factor(Language,
levels=names(sort(table(Language),
decreasing=TRUE))))
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat <- within(CleanDat,
Language <- factor(Language,
levels=names(sort(table(Language),
decreasing=TRUE))))
class(cleanDat[,2])
dat[,2]<-as.numeric(dat[,2])
head(cleanDat)
CleanDat <- within(CleanDat,
Native_Speakers <- factor(Native_Speakers,
levels=names(sort(table(Native_Speakers),
decreasing=TRUE))))
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-CleanDat[order(-CleanDat[,2],CleanDat[,1]),]
CleanDat<-CleanDat[order(CleanDat[,2],CleanDat[,1]),]
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-head(cleanDat,20)
CleanDat<-CleanDat[order(CleanDat[,2],CleanDat[,1]),]
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-head(cleanDat,20)
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-head(cleanDat,20)
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-CleanDat[order(CleanDat[,2]),]
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
CleanDat<-CleanDat[order(desc(CleanDat[,2])),]
CleanDat<-CleanDat[order(-(CleanDat[,2])),]
CleanDat<-head(cleanDat,20)
CleanDat
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,reorder(Native_Speakers,-value)))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,y=reorder(Native_Speakers,-value)))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,x=reorder(Native_Speakers,-value)))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity",position='fill')+coord_flip()
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Native_Speakers,Language))+geom_bar(stat="identity")
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity",position='fill')+coord_flip()
ggplot(CleanDat,aes(Language,Native_Speakers))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,order(-Native_Speakers)))+geom_bar(stat="identity")+coord_flip()
ggplot(CleanDat,aes(Language,order(desc(Native_Speakers))))+geom_bar(stat="identity")+coord_flip()
Native_Speakers = reorder(Native_Speakers, Value))
CleanDat <- transform(CleanDat,
Native_Speakers = reorder(Native_Speakers, Value))
shiny::runGitHub('Homework5', 'jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
library(dev.tools)
library("devtools")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='jwcrist',
token='9BD158CE9B4D197B3D40464F5E130675',
secret='pMnMEKQGWr25Ewm5+UiGYRnPaBRbh9Pk8cQ49i1H')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
library(shinyapps)
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runApp('C:/Homework5/Homework5/Homework5/Homework5/Homework5')
shiny::runApp('C:/Homework5/Homework5/Homework5/Homework5/Homework5')
shiny::runApp('C:/Homework5/Homework5/Homework5/Homework5/Homework5')
shiny::runApp('C:/Homework5/Homework5/Homework5/Homework5/Homework5')
shiny::runApp('C:/Homework5/Homework5/Homework5/Homework5/Homework5')
# shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
shiny::runGitHub('Homework5','Jwcrist')
install.packages("ravro")
install.packages("plyrmr")
install.packages("rmr")
install.packages(c("MASS","ggplot2","dplyr"))
setwd("C:/Users/J/Desktop/Business Analysis/group_project/BusA/project/Group8_project")
dataset<-read.csv("Gov_Tuition_Data_2")
dataset<-read.csv("Gov_Tuition_Data_2.csv")
dataset
saveRDS(dataset,"Gov_Tuition_Data.RDS")
readRDS("Gov_Tuition_Data.RDS")
library(MASS)
library(ISLR)
library(ggplot2)
Weekly
summary(Weekly)
head(Weekly, 1)
cor(Weekyl)
cor(Weekly)
cor(Weekly[,1,8])
cor(Weekly[,1:8])
data1<-Weekly[,1:8]
cor(data1)
pairs(data1)
cor(data1)
library(ggmap)
ggplot()+geom_polygon(state, aes(lat, long, group=group))
ggplot()+geom_polygon(State, aes(lat, long, group=group))
pairs(data1)
attach(data1)
plot(Volume)
head(Weekly, 1)
summary(Weekly)
data1<-Weekly[,1:8]
cor(data1)
pairs(data1)
attach(data1)
plot(Volume)
attach(Weekly)
plot(Volume)
head(Weekly, 1)
cor(data1)
pairs(data1)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Weekly, family = binomial)
summary(glm.fit)
table(glm.fit, Direction)
table(glm.fit, Direction)
table(glm.pred,Direction )
glm.pred=rep ("Down " ,1250)
glm.pred[glm .probs >.5]=" Up"
glm.pred[glm.probs >.5]=" Up"
glm.pred[glm.probs > 0.5]= "Up"
contrasts(Direction)
glm.pred=rep ("Down " ,1250)
glm.pred[glm.probs >.5]=" Up"
glm.pred[glm.probs>0.5]<-"Yes"
glm.pred[glm.probs>0.5]<-"Up"
glm.probs=predict(glm.fit,type="response")
glm.probs[1:10]
glm.pred[glm.probs>0.5]<-"Up"
table(glm.pred,Direction )
table(glm.pred,Direction)
dim(pred)
dim(glm.pred)
contrasts(Direction)
glm.pred=rep("Down", 1250)
glm.probs=predict(glm.fit,type="response")
glm.probs[1:10]
glm.pred[glm.probs>0.5]<-"Up"
dim(glm.pred)
coef(glm.fit)
contrasts(Direction)
glm.pred=rep("Down", 1250)
glm.probs=predict(glm.fit,type="response")
glm.probs[1:10]
glm.pred[glm.probs>0.5]<-"Up"
table(glm.pred,Direction)
head(Weekly, 1)
tail(Weekly, 1)
tail(Weekly, 1)
glm.pred=rep("Down", 1089)
glm.probs=predict(glm.fit,type="response")
glm.probs[1:10]
glm.pred[glm.probs>0.5]<-"Up"
table(glm.pred,Direction)
table(glm.pred,Direction)
557/(557+430)
430/(557+430)
48/(557+430)
glm.fit2=glm(Direction~Lag2,data=Weekly, family = binomial)
summary(glm.fit2)
coef(glm.fit2)
contrasts(Direction)
glm.pred2=rep("Down", 1089)
glm.probs2=predict(glm.fit2,type="response")
glm.probs2[1:10]
glm.pred2[glm.probs2>0.5]<-"Up"
table(glm.pred2,Direction)
table(glm.pred,Direction)
48/(48+54)
glm.fit2=glm(Direction~Lag2,data=Weekly, family = binomial)
summary(glm.fit2)
coef(glm.fit2)
contrasts(Direction)
glm.pred2=rep("Down", 1089)
glm.probs2=predict(glm.fit2,type="response")
glm.pred2[glm.probs2>0.5]<-"Up"
glm.probs2[1:10]
table(glm.pred2,Direction)
579/(579+451)
451/(579+451)
26/(26+33)
tail(Weekly, 1)
library(RCurl)
dataset<-getURL('https://raw.githubusercontent.com/Jwcrist/BusA/master/homeworks/Assignment%204/Auto.csv',ssl.verifypeer=0L, followlocation=1L)
dataset<-getURL('https://raw.githubusercontent.com/Jwcrist/BusA/master/homeworks/Assignment%204/Auto.csv')
dataset<-getURL('https://raw.githubusercontent.com/Jwcrist/BusA/master/homeworks/Assignment%204/Auto.csv',ssl.verifypeer=0L, followlocation=1L)
dataset1<-read.csv(text=dataset)
head(dataset1,1)
pairs(dataset1)
head(dataset1,3)
library(ggplot2)
ggplot(dataset1, aes(x=factor(mpg01), y=mpg, color=mpg))
ggplot(dataset1, aes(x=factor(mpg01), y=mpg, color=mpg))+geom_boxplot()
ggplot(dataset1, aes(x=factor(mpg01), y=mpg))+geom_boxplot()
tail(dataset1)
0.8*397
trainingdata<-sample(dataset1, size=318, replace=F)
397-318
trainingdata<-dataset1[,1:318]
trainingdata<-dataset1[1:318,]
testdata<-dataset1[79,]
cor(dataset1)
cor(dataset1[,-9])
cor(dataset1[,1:8],dataset1[10])
cor(dataset1[,1:8],dataset1[,10])
head(dataset1,3)
library(dplyr)
dataset2<-dataset1 %>%
select(mpg, cylinders, displacement, horsepower, weight, acceleration, year, origin, mpg01)
cor(dataset2)
str(dataset2)
select(mpg, cylinders, displacement, as.numeric(horsepower), weight, acceleration, year, origin, mpg01)
dataset2<-dataset1 %>%
select(mpg, cylinders, displacement, as.numeric(horsepower), weight, acceleration, year, origin, mpg01)
str(dataset2)
